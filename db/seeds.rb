# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)


require 'csv'

csv_text = File.read("urbanwander_import.csv")
csv = CSV.parse(csv_text, :headers => true)
csv.each do |row|
  row = row.to_hash.with_indifferent_access
  p =Place.create(row)
  if p
    print ("added " + p.name + "\n")
  else
    print ("ERROR: could not add " + row["name"] + "\n")
  end
end




coords1 = [
  [37.7951184623911, -122.40214169025421],
  [37.794783580481706, -122.40209341049193],
  [37.794859882822436, -122.4014925956726],
  [37.794406306638834, -122.40141212940217],
  [37.79432576478241, -122.40227580070496],
  [37.7938679462461, -122.40219533443451],
  [37.79397816207892, -122.40132093429564],
  [37.79265556123338, -122.40103662014006],
  [37.79280817023158, -122.3998886346817],
  [37.79222316736003, -122.39974915981291],
  [37.79231218983492, -122.39914834499358],
  [37.79277849628437, -122.39926099777222],
  [37.792816648500015, -122.3987030982971],
  [37.793342299242944, -122.39880502223969],
  [37.79337621206568, -122.39857971668242],
  [37.792659800376455, -122.39749073982237],
  [37.79351186320097, -122.39761412143706],
  [37.793723817601254, -122.39749073982237],
]

coords6 = [
  [37.779911, -122.411835],
  [37.779911, -122.411835],
  [37.779911, -122.411835],
  [37.780003, -122.411957],
  [37.780003, -122.411957],
  [37.783524, -122.407494],
  [37.783524, -122.407494],
  [37.784008, -122.408089],
  [37.784008, -122.408089],
  [37.787655, -122.403496],
  [37.787655, -122.403496],
  [37.787849, -122.403496],
  [37.787849, -122.403496],
  [37.788921, -122.403740],
  [37.788921, -122.403740],
  [37.789024, -122.402863]
]

coords7 = [
  [37.747829, -122.438179],
  [37.751175, -122.438492],
  [37.755550, -122.438873],
  [37.755550, -122.438873],
  [37.757000, -122.438950],
  [37.757347, -122.439018],
  [37.757439, -122.438942],
  [37.757511, -122.439026],
  [37.757877, -122.439072],
  [37.757877, -122.439072]
]

coords5 = [
  [37.8053900, -122.4069700],
[37.8054800, -122.4069900],
[37.8055200, -122.4070000],
[37.8064500, -122.4071800],
[37.8063900, -122.4076200],
[37.8062700, -122.4085800],
[37.8061600, -122.4094800],
[37.8052400, -122.4092900],
[37.8053300, -122.4085600],
[37.8052000, -122.4085400],
[37.8048600, -122.4084700],
[37.8043900, -122.4083600],
[37.8042600, -122.4094000],
[37.8041900, -122.4099600],
[37.8037400, -122.4098800],
[37.8032700, -122.4097900],
[37.8033900, -122.4088300],
[37.8034700, -122.4081900],
[37.8035100, -122.4078600],
[37.8035300, -122.4076400],
[37.8035700, -122.4073500],
[37.8036200, -122.4070300],
[37.8036700, -122.4066300],
[37.8036700, -122.4065400],
[37.8036700, -122.4064900],
[37.8036700, -122.4064500],
[37.8036500, -122.4064200],
[37.8036100, -122.4063600],
[37.8035800, -122.4063300],
[37.8035500, -122.4063200],
[37.8035200, -122.4063200],
[37.8034700, -122.4063500],
[37.8034300, -122.4064000],
[37.8033800, -122.4064700],
[37.8033300, -122.4065400],
[37.8032500, -122.4066200],
[37.8032000, -122.4066700],
[37.8031600, -122.4067000],
[37.8031100, -122.4067200],
[37.8030700, -122.4067200],
[37.8030000, -122.4067200],
[37.8028900, -122.4067000],
[37.8027800, -122.4066500],
[37.8027200, -122.4066200],
[37.8026100, -122.4065400],
[37.8025600, -122.4064400],
[37.8024900, -122.4063800],
[37.8023600, -122.4062900],
[37.8021200, -122.4061800],
[37.8020200, -122.4061000],
[37.8019400, -122.4060100],
[37.8018800, -122.4059000],
[37.8018600, -122.4058700],
[37.8018500, -122.4057800],
[37.8018500, -122.4057400],
[37.8018500, -122.4057000],
[37.8018600, -122.4056600]
  # [37.805519, -122.406998],
  # [37.805519, -122.406998],
  # [37.806450, -122.407181],
  # [37.806450, -122.407181],
  # [37.806160, -122.409477],
  # [37.806160, -122.409477],
  # [37.805237, -122.409286],
  # [37.805237, -122.409286],
  # [37.805325, -122.408562],
  # [37.805325, -122.408562],
  # [37.805325, -122.408562],
  # [37.805122, -122.410149],
  # [37.805122, -122.410149],
  # [37.804192, -122.409966],
  # [37.804192, -122.409966],
  # [37.804390, -122.408363],
  # [37.804390, -122.408363],
  # [37.804863, -122.408470],
  # [37.804863, -122.408470],
  # [37.804863, -122.408470],
  # [37.805325, -122.408562],
  # [37.805325, -122.408562],
  # [37.805122, -122.410149],
  # [37.805122, -122.410149],
  # [37.803268, -122.409782],
  # [37.803268, -122.409782],
  # [37.803669, -122.406631],
  # [37.803665, -122.406456],
  # [37.803612, -122.406357],
  # [37.803612, -122.406357],
  # [37.803539, -122.406319],
  # [37.803474, -122.406349],
  # [37.803249, -122.406624],
  # [37.803116, -122.406715],
  # [37.802887, -122.406700],
  # [37.802719, -122.406616],
  # [37.802719, -122.406616],
  # [37.802719, -122.406616],
  # [37.802490, -122.406380],
  # [37.802116, -122.406181],
  # [37.801937, -122.406013],
  # [37.801865, -122.405869],
  # [37.801861, -122.405663],
  # [37.801861, -122.405663]
]

def routeWithPoints (routeName, routeID, coords)
  r = Route.new(:name => routeName)
  r.id = routeID
  points = []
  coords.each_with_index { |item, index|
    p = RoutePoint.new(:route_order => index, :latitude => item[0], :longitude => item[1])
    points.push(p)
  }

  r.route_points = points
  success = r.save
  if (success) then print ("added " + routeName + "\n")
  else ("!!!COULD NOT ADD " + routeName + "\n")
  end
end

routeWithPoints "POPOS", 1, coords1
routeWithPoints "Let's Get Physical", 5, coords5
routeWithPoints "Beautiful Views", 6, coords6
routeWithPoints "Kids Corner", 7, coords7
